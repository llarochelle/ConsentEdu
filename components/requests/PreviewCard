import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Eye, Calendar, Users, FileText } from "lucide-react";
import { format } from "date-fns";
import { fr } from "date-fns/locale";

export default function PreviewCard({ formData }) {
  const getTypeLabel = (type) => {
    const labels = {
      sortie_scolaire: "Sortie scolaire",
      utilisation_photos: "Utilisation de photos",
      activite_speciale: "Activité spéciale",
      transport: "Transport",
      medicament: "Administration de médicament",
      autre: "Autre"
    };
    return labels[type] || type;
  };

  const getAudienceLabel = (audience) => {
    const labels = {
      classe_specifique: "Classe spécifique",
      niveau_scolaire: "Niveau scolaire", 
      cycle: "Cycle",
      ecole_entiere: "École entière"
    };
    return labels[audience] || audience;
  };

  return (
    <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-lg max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-slate-800">
          <Eye className="w-5 h-5" />
          Aperçu de la demande
        </CardTitle>
        <p className="text-slate-600">Voici comment les parents verront votre demande</p>
      </CardHeader>
      <CardContent>
        {/* Simulation email */}
        <div className="bg-gradient-to-br from-slate-50 to-blue-50 rounded-lg p-6 border border-slate-200">
          {/* En-tête email */}
          <div className="border-b border-slate-200 pb-4 mb-6">
            <div className="flex items-center gap-3 mb-2">
              <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                <FileText className="w-4 h-4 text-white" />
              </div>
              <span className="font-semibold text-slate-800">ConsentEdu - École primaire</span>
            </div>
            <p className="text-sm text-slate-600">Demande de consentement</p>
          </div>

          {/* Contenu */}
          <div className="space-y-6">
            <div>
              <h1 className="text-2xl font-bold text-slate-800 mb-2">
                {formData.title || "Titre de la demande"}
              </h1>
              <div className="flex flex-wrap gap-2 mb-4">
                <Badge variant="secondary" className="bg-blue-100 text-blue-800">
                  {getTypeLabel(formData.type)}
                </Badge>
                <Badge variant="outline">
                  {getAudienceLabel(formData.target_audience)}
                  {formData.target_details && ` - ${formData.target_details}`}
                </Badge>
              </div>
            </div>

            <div className="prose prose-slate max-w-none">
              <p className="text-slate-700 leading-relaxed">
                {formData.description || "Description de l'activité..."}
              </p>
              {formData.additional_info && (
                <div className="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
                  <h4 className="font-semibold text-blue-800 mb-2">Informations supplémentaires</h4>
                  <p className="text-blue-700 text-sm">{formData.additional_info}</p>
                </div>
              )}
            </div>

            {/* Dates */}
            <div className="grid md:grid-cols-2 gap-4">
              {formData.activity_date && (
                <div className="flex items-center gap-2 text-sm">
                  <Calendar className="w-4 h-4 text-slate-500" />
                  <span className="text-slate-600">Date d'activité:</span>
                  <span className="font-medium text-slate-800">
                    {format(new Date(formData.activity_date), "dd MMMM yyyy", { locale: fr })}
                  </span>
                </div>
              )}
              {formData.deadline && (
                <div className="flex items-center gap-2 text-sm">
                  <Calendar className="w-4 h-4 text-red-500" />
                  <span className="text-slate-600">Réponse avant le:</span>
                  <span className="font-medium text-red-600">
                    {format(new Date(formData.deadline), "dd MMMM yyyy", { locale: fr })}
                  </span>
                </div>
              )}
            </div>

            {/* Boutons simulés */}
            <div className="border-t border-slate-200 pt-6">
              <p className="text-slate-600 text-center mb-4">
                Donnez-vous votre consentement pour cette activité ?
              </p>
              <div className="flex gap-3 justify-center">
                <button className="px-6 py-3 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors">
                  ✓ J'accepte
                </button>
                <button className="px-6 py-3 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700 transition-colors">
                  ✗ Je refuse
                </button>
              </div>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}